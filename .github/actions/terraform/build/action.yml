name: Continuous Integration - Validate Terraform
description: Runs terraform init, validate and plan

inputs:
  terraform_version:
    description: Terraform version to use
    required: false
    default: "1.11.3" #sji todo

runs:
  using: "composite"
  steps:
    - name: Check out code
      uses: actions/checkout@v4

    # Set up Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform_version }}
    #sji todo - environments
    # Determine environment based on branch?
    - name: Set environment
      id: set-env
      shell: bash
      run: |
        if [[ "${{ github.ref_name }}" == "dev" ]]; then
          echo "environment=dev" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref_name }}" == "uat" ]]; then
          echo "environment=uat" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref_name }}" == "prod" ]]; then
          echo "environment=prod" >> $GITHUB_OUTPUT
        else
          echo "environment=dev" >> $GITHUB_OUTPUT
        fi
        
    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.TF_SA }}
        export_default_credentials: true

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq
      shell: bash

    - name: Terraform Version
      run: terraform version
      shell: bash

    - name: Terraform Init
      run: terraform init -upgrade
      shell: bash
      #working-directory: ./environments/${{ steps.set-env.outputs.environment }}

    - name: Terraform Validate
      run: terraform validate
      shell: bash
      #working-directory: ./environments/${{ steps.set-env.outputs.environment }}

    - name: Terraform Plan
      run: terraform plan -out=tfplan
      shell: bash
      #working-directory: ./environments/${{ steps.set-env.outputs.environment }}

    # Apply
    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
      shell: bash
      #working-directory: ./environments/${{ steps.set-env.outputs.environment }}