name: Cleanup IAM Bindings
description: "This action cleans up stale IAM bindings for deleted service accounts in GCP. It checks the IAM bindings in terraform.tfvars and removes any bindings for service accounts that no longer exist."

inputs:
  project_id:
    description: "Project ID"
    required: true
  dry_run:
    description: "Enable dry run mode to simulate the cleanup without making changes"
    required: false
    default: "true"

runs:
  using: "composite"
  steps:

    - name: CHECK 
      run: echo "✅✅✅✅✅✅ now here..."
      shell: bash

    # Authenticate to GCP
    - name: Authenticate with GCP
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ inputs.service_account }}
        export_environment_variables: true
        
    - name: Set up Google Cloud
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ inputs.project_id }}

    # Identify stale bindings (Customize this step to match your stale logic)
    - name: Remove stale IAM bindings
      shell: bash
      run: |
        if [[ "${{ inputs.dry_run }}" == "true" ]]; then
          echo "Dry run enabled. Skipping removal of bindings."
          echo "The following bindings would have been removed: ${{ env.stale_bindings }}"
        else
          for binding in ${{ env.stale_bindings }}; do
            echo "Removing binding for deleted service account: $binding"
            
            # Fetch all roles assigned to the service account
            roles=$(gcloud projects get-iam-policy ${{ inputs.project_id }} --format="yaml" \
              | grep -A 2 "members:" \
              | grep -B 2 "serviceAccount:$binding" \
              | grep "role:" \
              | sed 's/role: //')

            for role in $roles; do
              echo "Removing role $role for service account $binding"
              gcloud projects remove-iam-policy-binding ${{ inputs.project_id }} \
                --member=serviceAccount:$binding \
                --role=$role
            done
          done
        fi
        
        # Output the list of stale bindings
        echo "Identified stale bindings: ${stale_bindings[@]}"
        echo "stale_bindings=${stale_bindings[@]}" >> $GITHUB_ENV

    # Remove stale IAM bindings (with dry run option)
    - name: Remove stale IAM bindings
      shell: bash
      run: |
        if [[ "${{ inputs.dry_run }}" == "true" ]]; then
          echo "Dry run enabled. Skipping removal of bindings."
          echo "The following bindings would have been removed: ${{ env.stale_bindings }}"
        else
          for binding in ${{ env.stale_bindings }}; do
            echo "✅✅✅✅✅✅ nDELTED..."
            echo "Removing binding for deleted service account: $binding"
            gcloud projects remove-iam-policy-binding ${{ inputs.project_id }} \
              --member=serviceAccount:$binding
          done
        fi
    - name: CHECK 
      run: echo "✅✅✅✅✅✅ now here..."
      shell: bash

    # Verify IAM bindings after cleanup
    - name: Verify IAM bindings
      shell: bash
      run: |
        echo "Verifying IAM bindings after cleanup..."
        gcloud projects get-iam-policy ${{ inputs.project_id }} --format=json
    
    - name: CHECK 
      run: echo "✅✅✅✅✅✅ now here..."
      shell: bash