name: "Import GCP KMS Key Rings"
description: "Checks for existing GCP KMS key rings and imports them into Terraform if found."

inputs:
  project_id:
    description: "Project ID"
    required: true
  location:
    description: "KMS location (e.g. global)"
    required: false
    default: "global"
  keyring_names:
    description: "Comma-separated list of key ring names to check and import"
    required: true

runs:
  using: "composite"
  steps:

    - name: CHECK 
      run: echo "‚úÖ‚úÖ now here..."
      shell: bash

    # Authenticate to GCP
    - name: Authenticate with GCP
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ inputs.service_account }}
        export_environment_variables: true
        
    - name: Set up Google Cloud
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ inputs.project_id }}

    - name: List Key Rings
      shell: bash
      run: |
        gcloud kms keyrings list --location=${{ inputs.location }} --project=${{ inputs.project_id }}

    - name: Import existing key rings
      shell: bash
      run: |
        set -euo pipefail

        LOCATION="${{ inputs.location }}"
        PROJECT_ID="${{ inputs.project_id }}"
        IFS=',' read -ra MAP_KEYS <<< "${{ inputs.keyring_names }}"
        TFVARS_JSON="./terraform.tfvars.json"

        if [ ! -f "$TFVARS_JSON" ]; then
          echo "‚ùå terraform.tfvars.json not found at $TFVARS_JSON"
          exit 1
        fi

        echo "üì¶ Starting key ring import for keys: ${MAP_KEYS[*]}"

        for MAP_KEY in "${MAP_KEYS[@]}"; do
          MAP_KEY_TRIMMED="$(echo "$MAP_KEY" | xargs)"

          echo "üîç Resolving key ring name for map key: $MAP_KEY_TRIMMED"
          KEYRING_NAME=$(jq -r ".kms_key_rings[\"$MAP_KEY_TRIMMED\"].name" "$TFVARS_JSON")

          if [ "$KEYRING_NAME" == "null" ]; then
            echo "‚ùå Could not find key ring name for map key '$MAP_KEY_TRIMMED' in tfvars. Skipping."
            continue
          fi

          echo "üîç Checking existence of key ring: $KEYRING_NAME in $LOCATION"

          if gcloud kms keyrings describe "$KEYRING_NAME" \
              --location="$LOCATION" \
              --project="$PROJECT_ID" > /dev/null 2>&1; then

            echo "‚úÖ Key ring found. Importing as: module.kms_key_ring[\"$MAP_KEY_TRIMMED\"].google_kms_key_ring.key_ring"
            terraform import \
              "module.kms_key_ring[\"$MAP_KEY_TRIMMED\"].google_kms_key_ring.key_ring" \
              "projects/$PROJECT_ID/locations/$LOCATION/keyRings/$KEYRING_NAME"
          else
            echo "‚ö†Ô∏è Key ring '$KEYRING_NAME' not found in GCP. Skipping import for map key: $MAP_KEY_TRIMMED"
          fi
        done




