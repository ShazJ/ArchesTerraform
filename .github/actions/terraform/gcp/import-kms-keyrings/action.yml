name: "Import GCP KMS Key Rings"
description: "Checks for existing GCP KMS key rings and imports them into Terraform if found."

inputs:
  project_id:
    description: "Project ID"
    required: true
  location:
    description: "KMS location (e.g. global)"
    required: false
    default: "global"
  keyring_names:
    description: "Comma-separated list of key ring names to check and import"
    required: true

runs:
  using: "composite"
  steps:

    - name: CHECK 
      run: echo "‚úÖ‚úÖ now here..."
      shell: bash

    # Authenticate to GCP
    - name: Authenticate with GCP
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ inputs.service_account }}
        export_environment_variables: true
        
    - name: Set up Google Cloud
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ inputs.project_id }}

    - name: List Key Rings
      shell: bash
      run: |
        gcloud kms keyrings list --location=${{ inputs.location }} --project=${{ inputs.project_id }}

    - name: Import existing key rings
      shell: bash
      run: |
        LOCATION="${{ inputs.location }}"
        PROJECT_ID="${{ inputs.project_id }}"
        IFS=',' read -ra KEYRINGS <<< "${{ inputs.keyring_names }}"

        echo "üì¶ Starting key ring import process for: ${KEYRINGS[*]}"
        
        for KEYRING_NAME in "${KEYRINGS[@]}"; do
          KEYRING_NAME_TRIMMED="$(echo "$KEYRING_NAME" | xargs)"  # Trim spaces

          # Derive the Terraform map key (e.g. data-store-keyring-uat ‚Üí data_store_keyring_uat)
          MAP_KEY_NAME="$(echo "$KEYRING_NAME_TRIMMED" | tr '-' '_' | tr '[:upper:]' '[:lower:]')"

          echo "üîç Checking if key ring '$KEYRING_NAME_TRIMMED' exists in GCP..."

          if gcloud kms keyrings describe "$KEYRING_NAME_TRIMMED" \
              --location="$LOCATION" \
              --project="$PROJECT_ID" > /dev/null 2>&1; then

            echo "‚úÖ Key ring found. Importing as: module.kms.google_kms_key_ring.key_ring[\"$MAP_KEY_NAME\"]"

            terraform import \
              "module.kms.google_kms_key_ring.key_ring[\"$MAP_KEY_NAME\"]" \
              "projects/$PROJECT_ID/locations/$LOCATION/keyRings/$KEYRING_NAME_TRIMMED"

          else
            echo "‚ö†Ô∏è Key ring '$KEYRING_NAME_TRIMMED' not found. Skipping."
          fi
        done


