name: "Import GCP KMS Key Rings"
description: "Checks for existing GCP KMS key rings and imports them into Terraform if found."

inputs:
  project_id:
    description: "Project ID"
    required: true
  location:
    description: "KMS location (e.g. global)"
    required: false
    default: "global"
  keyring_names:
    description: "Comma-separated list of key ring names to check and import"
    required: true

runs:
  using: "composite"
  steps:

    - name: CHECK 
      run: echo "‚úÖ‚úÖ now here..."
      shell: bash

    # Authenticate to GCP
    - name: Authenticate with GCP
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ inputs.service_account }}
        export_environment_variables: true
        
    - name: Set up Google Cloud
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ inputs.project_id }}

    - name: List Key Rings
      shell: bash
      run: |
        gcloud kms keyrings list --location=${{ inputs.location }} --project=${{ inputs.project_id }}

    - name: Import existing key rings from terraform.tfvars
      shell: bash
      run: |
        echo "üêç Installing Python HCL2 parser..."
        pip install hcl2 --quiet

        echo "üîÑ Converting terraform.tfvars to JSON..."
        python -c '
        import hcl2, json
        with open("terraform.tfvars", "r") as f:
            obj = hcl2.load(f)
        print(json.dumps(obj))' > .terraform.tfvars.json

        LOCATION="${{ inputs.location }}"
        PROJECT_ID="${{ inputs.project_id }}"

        echo "üì¶ Extracting key ring definitions..."
        KEYRINGS=$(jq -r '.kms_key_rings | keys[]' .terraform.tfvars.json)

        for MAP_KEY in $KEYRINGS; do
          # Lookup the actual key ring name from the tfvars
          KEY_RING_NAME=$(jq -r --arg k "$MAP_KEY" '.kms_key_rings[$k].name' .terraform.tfvars.json)

          echo "üîç Checking if key ring '$KEY_RING_NAME' exists in GCP..."
          if gcloud kms keyrings describe "$KEY_RING_NAME" \
                --location="$LOCATION" \
                --project="$PROJECT_ID" > /dev/null 2>&1; then

            echo "‚úÖ Key ring found. Importing as: module.kms_key_ring[\"$MAP_KEY\"].google_kms_key_ring.key_ring"
            terraform import \
              "module.kms_key_ring[\"$MAP_KEY\"].google_kms_key_ring.key_ring" \
              "projects/$PROJECT_ID/locations/$LOCATION/keyRings/$KEY_RING_NAME"
          else
            echo "‚ö†Ô∏è Key ring '$KEY_RING_NAME' not found. Skipping."
          fi
        done

