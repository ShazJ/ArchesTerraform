name: Terraform Deployment

# on: sji!
#     workflow_run:
#       workflows: ["Security Scan"] sonar?!
#       types:
#         - completed

on:
  workflow_dispatch:
  push:
    branches:
      - dev
    #   - uat
    #   - prod
    # paths:
    #   - 'terraform/**'

permissions:
  contents: write

jobs:
# iif: == 'success' sji! }}
  terraform-deploy:
    name: Terraform Validate
    runs-on: ubuntu-latest
    
    # Specify environment for prod branch
    environment: ${{ github.ref_name == 'prod' && 'prod' || '' }}

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GOOGLE_CREDENTIALS: ${{ secrets.TF_SA }}

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      # Authenticate to GCP
      # sji - we should probs use workload identity federation here really
      - name: Authenticate with GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.TF_SA }}' 

      - name: Debug Auth Output
        run: |
          echo "Access token exists: ${{ steps.auth.outputs.access_token != '' }}"
          echo "Credentials file path: ${{ steps.auth.outputs.credentials_file_path }}"
          if [ -f "${{ steps.auth.outputs.credentials_file_path }}" ]; then
            echo "Credential file exists"
          else
            echo "Credential file not found!"
            exit 1
          fi
          
      - name: Set up Google Cloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Test gcloud command
        run: |
          gcloud kms keyrings describe data-store-keyring-uat --location europe-west2
       
        #should we allow injection? 

      - name: Terraform Quality Check
        uses: ./.github/actions/terraform/quality

          # or here?

      - name: Terraform Build
        uses: ./.github/actions/terraform/build
        with:
          terraform_version: 1.5.0
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_file_path: ${{ steps.auth.outputs.credentials_file_path }}
          # working-directory: ./environments/${{ steps.set-env.outputs.environment }}
          # env:
          #   GOOGLE_CREDENTIALS: ${{ secrets.TF_SA }}

#sji run only on main merge
  # render-terraform-docs:      
  #   name: Terraform Docs
  #   needs: terraform-deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0  
      
  #     # Authenticate to GCP
  #     - name: Authenticate with GCP
  #       uses: google-github-actions/auth@v2
  #       with:
  #         credentials_json: '${{ secrets.TF_SA }}'  # Key from script

  #     - name: Terraform Docs
  #       uses: ./.github/actions/terraform/docs

